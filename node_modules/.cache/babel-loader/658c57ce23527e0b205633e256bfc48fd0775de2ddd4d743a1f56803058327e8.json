{"ast":null,"code":"var _jsxFileName = \"/home/linkachu/jammming/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport './components/Track/Track';\nimport Track from './components/Track/Track';\nimport Tracklist from './components/Tracklist/Tracklist';\nimport Playlist from './components/Playlist/Playlist';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport SearchResults from './components/SearchResults/SearchResults';\nimport { useEffect, useState } from 'react';\nimport * as Spotify from './Spotify';\nimport * as AuthActions from './AuthActions';\nimport UserProfile from './components/UserProfile/UserProfile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [playlist, setPlaylist] = useState({});\n  const [userInfo, setUserInfo] = useState({});\n  useEffect(() => {\n    if (AuthActions.checkAuthCode() && !AuthActions.checkAccessToken()) {\n      console.log(\"Getting new access token\");\n      AuthActions.getNewAccessToken();\n    }\n  }, []);\n  function addToPlaylistHandler(track) {\n    if (!playlist.tracks) {\n      setPlaylist(prev => {\n        return {\n          title: prev.title,\n          id: prev.id,\n          tracks: [track]\n        };\n      });\n    } else if (!playlist.tracks.find(currTrack => currTrack.id === track.id)) {\n      setPlaylist(prev => {\n        return {\n          title: prev.title,\n          tracks: [...prev.tracks, track]\n        };\n      });\n    }\n  }\n  function removeFromPlaylistHandler(track) {\n    if (playlist.tracks.find(currTrack => currTrack.id === track.id)) {\n      setPlaylist(prev => {\n        return {\n          title: prev.title,\n          tracks: prev.tracks.filter(currTrack => currTrack.id !== track.id)\n        };\n      });\n    }\n  }\n  function changePlaylistTitleNameHandler(newTitle) {\n    setPlaylist(prev => {\n      return {\n        title: newTitle,\n        tracks: prev.tracks\n      };\n    });\n  }\n  async function searchQueryHandler(query) {\n    if (!query) return;\n    let results = [];\n    results = await Spotify.getSearchResults(query);\n    let newResults = [];\n    if (results.length != 0) {\n      newResults = results.map(result => {\n        return {\n          title: result.name,\n          artist: result.artists[0].name,\n          album: result.album.name,\n          id: result.id,\n          uri: result.uri\n        };\n      });\n    }\n    setSearchResults(newResults);\n  }\n  async function createPlaylistHandler() {\n    if (!playlist || !playlist.tracks || playlist.tracks.length == 0) return;\n    const {\n      id\n    } = await Spotify.createPlaylist(playlist.title);\n    Spotify.addToPlaylist(id, playlist.tracks);\n    setPlaylist({});\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [userInfo && /*#__PURE__*/_jsxDEV(UserProfile, {\n      user: userInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n      title: playlist.title,\n      tracks: playlist.tracks,\n      onRemoveTrack: removeFromPlaylistHandler,\n      onTitleChange: changePlaylistTitleNameHandler,\n      onCreate: createPlaylistHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearchQuery: searchQueryHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n      searchResults: searchResults,\n      onAddTrack: addToPlaylistHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RNC/4lMNBVm29agDuS6uSf3YmS8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Track","Tracklist","Playlist","SearchBar","SearchResults","useEffect","useState","Spotify","AuthActions","UserProfile","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","playlist","setPlaylist","userInfo","setUserInfo","checkAuthCode","checkAccessToken","console","log","getNewAccessToken","addToPlaylistHandler","track","tracks","prev","title","id","find","currTrack","removeFromPlaylistHandler","filter","changePlaylistTitleNameHandler","newTitle","searchQueryHandler","query","results","getSearchResults","newResults","length","map","result","name","artist","artists","album","uri","createPlaylistHandler","createPlaylist","addToPlaylist","className","children","user","fileName","_jsxFileName","lineNumber","columnNumber","onRemoveTrack","onTitleChange","onCreate","onSearchQuery","onAddTrack","_c","$RefreshReg$"],"sources":["/home/linkachu/jammming/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport './components/Track/Track'\nimport Track from './components/Track/Track';\nimport Tracklist from './components/Tracklist/Tracklist';\nimport Playlist from './components/Playlist/Playlist';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport SearchResults from './components/SearchResults/SearchResults';\nimport { useEffect, useState } from 'react';\nimport * as Spotify from './Spotify';\nimport * as AuthActions from './AuthActions'\nimport UserProfile from './components/UserProfile/UserProfile';\n\nfunction App() {\n  const [searchResults, setSearchResults] = useState([]);\n\n  const [playlist, setPlaylist] = useState({});\n\n  const [userInfo, setUserInfo] = useState({});\n\n  useEffect(() => {\n    if(AuthActions.checkAuthCode() && !AuthActions.checkAccessToken()){\n      console.log(\"Getting new access token\");\n      AuthActions.getNewAccessToken();\n    }\n\n  }, []);\n\n  function addToPlaylistHandler(track){\n    if(!playlist.tracks){\n      setPlaylist((prev) => {\n        return {\n          title: prev.title,\n          id: prev.id,\n          tracks: [\n            track\n          ]\n        }\n      })\n    }\n    else if(!playlist.tracks.find((currTrack) => currTrack.id === track.id)){\n      setPlaylist((prev) =>{\n        return {\n          title: prev.title,\n          tracks: [\n            ...prev.tracks,\n            track\n          ]\n        }\n      }\n    )}\n  }\n\n  function removeFromPlaylistHandler(track){\n    if(playlist.tracks.find((currTrack) => currTrack.id === track.id)){\n      setPlaylist((prev) => {\n        return {\n          title: prev.title,\n          tracks: prev.tracks.filter((currTrack) => currTrack.id !== track.id)\n        }\n      })\n    }\n  }\n\n  function changePlaylistTitleNameHandler(newTitle){\n    setPlaylist((prev) => {\n      return {\n        title: newTitle,\n        tracks: prev.tracks\n      }\n    })\n  }\n\n  async function searchQueryHandler(query){\n    if(!query)\n      return;\n\n    let results = [];\n    results = await Spotify.getSearchResults(query);\n\n    let newResults = [];\n\n    if(results.length != 0){\n      newResults = results.map(result => {\n        return {\n          title: result.name,\n          artist: result.artists[0].name,\n          album: result.album.name,\n          id: result.id,\n          uri: result.uri\n        }\n      });\n    }\n      \n    setSearchResults(newResults);\n  }\n\n  async function createPlaylistHandler(){\n    if(!playlist || !playlist.tracks || playlist.tracks.length == 0)\n      return;\n\n    const {id} = await Spotify.createPlaylist(playlist.title);\n\n    Spotify.addToPlaylist(id, playlist.tracks);\n\n    setPlaylist({});\n  }\n\n  return (\n    <div className=\"App\">\n      { userInfo && <UserProfile user={userInfo} /> }\n      <Playlist title={playlist.title} tracks={playlist.tracks} onRemoveTrack={removeFromPlaylistHandler} onTitleChange={changePlaylistTitleNameHandler} onCreate={createPlaylistHandler} />\n      <SearchBar onSearchQuery={searchQueryHandler} />\n      <SearchResults searchResults={searchResults} onAddTrack={addToPlaylistHandler} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}