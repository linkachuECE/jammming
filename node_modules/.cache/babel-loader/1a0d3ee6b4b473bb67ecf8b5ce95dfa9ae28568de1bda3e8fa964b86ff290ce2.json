{"ast":null,"code":"import axios from \"axios\";\nlet accessToken = \"\";\nlet authCode = \"\";\nlet codeVerifier = \"\";\nconst baseApiUrl = \"https://api.spotify.com\";\nconst clientId = \"a23843d079a34f28a8368672dc8a7bcd\";\nconst clientSecret = \"d98f121afd3b4d9babc64ce90f4d35f2\";\nasync function requestAccessToken() {\n  if (!authCode) return;\n  const tokenUrl = \"https://accounts.spotify.com/api/token\";\n  let response = await fetch(tokenUrl, {\n    body: `grant_type=client_credentials&client_id=${clientId}&client_secret=${clientSecret}`,\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    method: \"POST\"\n  });\n  response = await response.json();\n  let token = response.access_token;\n  accessToken = token;\n}\nasync function getArtist(artistID) {\n  const baseUrl = baseApiUrl + \"/v1/artists\";\n  let response = await fetch(`${baseUrl}/${artistID}`, {\n    headers: {\n      Authorization: `Bearer  ${accessToken}`\n    }\n  });\n  response = await response.json();\n  console.log(response);\n}\nasync function getSearchResults(searchQuery) {\n  const baseUrl = baseApiUrl + \"/v1/search\";\n  let queryString = new URLSearchParams({\n    q: searchQuery,\n    type: [\"track\"]\n  });\n  if (!accessToken) {\n    await requestAccessToken();\n  }\n  let response = await fetch(`${baseUrl}?${queryString.toString()}`, {\n    headers: {\n      Authorization: `Bearer  ${accessToken}`\n    }\n  });\n  let data = await response.json();\n  return data.tracks.items;\n}\nfunction generateRandomString(length) {\n  let text = '';\n  let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return text;\n}\nasync function generateCodeChallenge(codeVerifier) {\n  function base64encode(string) {\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(string))).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n  }\n  const encoder = new TextEncoder();\n  const data = encoder.encode(codeVerifier);\n  const digest = await window.crypto.subtle.digest('SHA-256', data);\n  return base64encode(digest);\n}\nasync function authorize() {\n  const redirectUri = 'http://localhost:3000';\n  codeVerifier = generateRandomString(128);\n  generateCodeChallenge(codeVerifier).then(codeChallenge => {\n    let state = generateRandomString(16);\n    let scope = 'user-read-private user-read-email';\n    localStorage.setItem('code_verifier', codeVerifier);\n    let args = new URLSearchParams({\n      response_type: 'code',\n      client_id: clientId,\n      scope: scope,\n      redirect_uri: redirectUri,\n      state: state,\n      code_challenge_method: 'S256',\n      code_challenge: codeChallenge\n    });\n    window.location = 'https://accounts.spotify.com/authorize?' + args;\n  });\n}\nfunction setAuthCode() {\n  const urlParams = new URLSearchParams(window.location.search);\n  if (urlParams.has('code')) authCode = urlParams.get('code');\n}\nexport { requestAccessToken, getSearchResults, getArtist, authorize, setAuthCode };","map":{"version":3,"names":["axios","accessToken","authCode","codeVerifier","baseApiUrl","clientId","clientSecret","requestAccessToken","tokenUrl","response","fetch","body","headers","method","json","token","access_token","getArtist","artistID","baseUrl","Authorization","console","log","getSearchResults","searchQuery","queryString","URLSearchParams","q","type","toString","data","tracks","items","generateRandomString","length","text","possible","i","charAt","Math","floor","random","generateCodeChallenge","base64encode","string","btoa","String","fromCharCode","apply","Uint8Array","replace","encoder","TextEncoder","encode","digest","window","crypto","subtle","authorize","redirectUri","then","codeChallenge","state","scope","localStorage","setItem","args","response_type","client_id","redirect_uri","code_challenge_method","code_challenge","location","setAuthCode","urlParams","search","has","get"],"sources":["/home/linkachu/jammming/src/Spotify.js"],"sourcesContent":["import axios from \"axios\";\n\nlet accessToken = \"\";\nlet authCode = \"\";\nlet codeVerifier = \"\";\nconst baseApiUrl = \"https://api.spotify.com\";\nconst clientId = \"a23843d079a34f28a8368672dc8a7bcd\";\nconst clientSecret = \"d98f121afd3b4d9babc64ce90f4d35f2\";\n\nasync function requestAccessToken(){\n    if(!authCode)\n        return;\n\n    const tokenUrl = \"https://accounts.spotify.com/api/token\";\n\n    \n\n    let response = await fetch(tokenUrl, {\n        body: `grant_type=client_credentials&client_id=${clientId}&client_secret=${clientSecret}`,\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        method: \"POST\"\n    });\n    response = await response.json();\n    let token = response.access_token;\n\n    accessToken = token;\n}\n\nasync function getArtist(artistID){\n    const baseUrl = baseApiUrl + \"/v1/artists\";\n\n    let response = await fetch(`${baseUrl}/${artistID}`, {\n        headers: {\n            Authorization: `Bearer  ${accessToken}`\n        }\n    });\n    response = await response.json();\n    console.log(response);\n}\n\nasync function getSearchResults(searchQuery){\n    const baseUrl = baseApiUrl + \"/v1/search\";\n\n    let queryString = new URLSearchParams({\n        q: searchQuery,\n        type: [\n            \"track\"\n        ]\n    })\n\n    if (!accessToken){\n        await requestAccessToken();\n    }\n\n    let response = await fetch(`${baseUrl}?${queryString.toString()}`, {\n        headers: {\n          Authorization: `Bearer  ${accessToken}`\n        }\n    });\n    let data = await response.json();\n\n    return data.tracks.items;\n}\n\nfunction generateRandomString(length) {\n    let text = '';\n    let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  \n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n}\n\nasync function generateCodeChallenge(codeVerifier) {\n    function base64encode(string) {\n      return btoa(String.fromCharCode.apply(null, new Uint8Array(string)))\n        .replace(/\\+/g, '-')\n        .replace(/\\//g, '_')\n        .replace(/=+$/, '');\n    }\n  \n    const encoder = new TextEncoder();\n    const data = encoder.encode(codeVerifier);\n    const digest = await window.crypto.subtle.digest('SHA-256', data);\n  \n    return base64encode(digest);\n}\n\nasync function authorize(){\n    const redirectUri = 'http://localhost:3000';\n\n    codeVerifier = generateRandomString(128);\n    \n    generateCodeChallenge(codeVerifier).then(codeChallenge => {\n        let state = generateRandomString(16);\n        let scope = 'user-read-private user-read-email';\n\n        localStorage.setItem('code_verifier', codeVerifier);\n\n        let args = new URLSearchParams({\n            response_type: 'code',\n            client_id: clientId,\n            scope: scope,\n            redirect_uri: redirectUri,\n            state: state,\n            code_challenge_method: 'S256',\n            code_challenge: codeChallenge\n        });\n\n        window.location = 'https://accounts.spotify.com/authorize?' + args;\n    });\n}\n\nfunction setAuthCode(){\n    const urlParams = new URLSearchParams(window.location.search);\n\n    if (urlParams.has('code'))\n      authCode = urlParams.get('code');\n}\n\nexport {requestAccessToken, getSearchResults, getArtist, authorize, setAuthCode};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}