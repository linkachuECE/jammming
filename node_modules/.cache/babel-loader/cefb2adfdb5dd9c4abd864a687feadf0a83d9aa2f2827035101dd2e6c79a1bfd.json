{"ast":null,"code":"import axios from \"axios\";\nlet apiToken = \"\";\nlet baseApiUrl = \"https://api.spotify.com\";\nasync function requestAccessToken() {\n  const clientID = \"a23843d079a34f28a8368672dc8a7bcd\";\n  const clientSecret = \"d98f121afd3b4d9babc64ce90f4d35f2\";\n  const tokenUrl = \"https://accounts.spotify.com/api/token\";\n  let response = await fetch(tokenUrl, {\n    body: `grant_type=client_credentials&client_id=${clientID}&client_secret=${clientSecret}`,\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    method: \"POST\"\n  });\n  response = await response.json();\n  let token = response.access_token;\n  apiToken = token;\n}\nasync function getArtist(artistID) {\n  const baseUrl = baseApiUrl + \"/v1/artists\";\n  let response = await fetch(`${baseUrl}/${artistID}`, {\n    headers: {\n      Authorization: `Bearer  ${apiToken}`\n    }\n  });\n  response = await response.json();\n  console.log(response);\n}\nasync function getSearchResults(searchQuery) {\n  const baseUrl = baseApiUrl + \"/v1/search\";\n  let queryString = new URLSearchParams({\n    q: searchQuery,\n    type: [\"track\"]\n  });\n  if (!apiToken) {\n    await requestAccessToken();\n  }\n  let response = await fetch(`${baseUrl}?${queryString.toString()}`, {\n    headers: {\n      Authorization: `Bearer  ${apiToken}`\n    }\n  });\n  let data = await response.json();\n  return data.tracks.items;\n}\nfunction generateRandomString(length) {\n  let text = '';\n  let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return text;\n}\nasync function generateCodeChallenge(codeVerifier) {\n  function base64encode(string) {\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(string))).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n  }\n  const encoder = new TextEncoder();\n  const data = encoder.encode(codeVerifier);\n  const digest = await window.crypto.subtle.digest('SHA-256', data);\n  return base64encode(digest);\n}\nexport { requestAccessToken, getSearchResults, getArtist };","map":{"version":3,"names":["axios","apiToken","baseApiUrl","requestAccessToken","clientID","clientSecret","tokenUrl","response","fetch","body","headers","method","json","token","access_token","getArtist","artistID","baseUrl","Authorization","console","log","getSearchResults","searchQuery","queryString","URLSearchParams","q","type","toString","data","tracks","items","generateRandomString","length","text","possible","i","charAt","Math","floor","random","generateCodeChallenge","codeVerifier","base64encode","string","btoa","String","fromCharCode","apply","Uint8Array","replace","encoder","TextEncoder","encode","digest","window","crypto","subtle"],"sources":["/home/linkachu/jammming/src/Spotify.js"],"sourcesContent":["import axios from \"axios\";\n\nlet apiToken = \"\";\nlet baseApiUrl = \"https://api.spotify.com\";\n\nasync function requestAccessToken(){\n    const clientID = \"a23843d079a34f28a8368672dc8a7bcd\";\n    const clientSecret = \"d98f121afd3b4d9babc64ce90f4d35f2\";\n    const tokenUrl = \"https://accounts.spotify.com/api/token\";\n\n    let response = await fetch(tokenUrl, {\n        body: `grant_type=client_credentials&client_id=${clientID}&client_secret=${clientSecret}`,\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        method: \"POST\"\n    });\n    response = await response.json();\n    let token = response.access_token;\n\n    apiToken = token;\n}\n\nasync function getArtist(artistID){\n    const baseUrl = baseApiUrl + \"/v1/artists\";\n\n    let response = await fetch(`${baseUrl}/${artistID}`, {\n        headers: {\n            Authorization: `Bearer  ${apiToken}`\n        }\n    });\n    response = await response.json();\n    console.log(response);\n}\n\nasync function getSearchResults(searchQuery){\n    const baseUrl = baseApiUrl + \"/v1/search\";\n\n    let queryString = new URLSearchParams({\n        q: searchQuery,\n        type: [\n            \"track\"\n        ]\n    })\n\n    if (!apiToken){\n        await requestAccessToken();\n    }\n\n    let response = await fetch(`${baseUrl}?${queryString.toString()}`, {\n        headers: {\n          Authorization: `Bearer  ${apiToken}`\n        }\n    });\n    let data = await response.json();\n\n    return data.tracks.items;\n}\n\nfunction generateRandomString(length) {\n    let text = '';\n    let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  \n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n}\n\nasync function generateCodeChallenge(codeVerifier) {\n    function base64encode(string) {\n      return btoa(String.fromCharCode.apply(null, new Uint8Array(string)))\n        .replace(/\\+/g, '-')\n        .replace(/\\//g, '_')\n        .replace(/=+$/, '');\n    }\n  \n    const encoder = new TextEncoder();\n    const data = encoder.encode(codeVerifier);\n    const digest = await window.crypto.subtle.digest('SHA-256', data);\n  \n    return base64encode(digest);\n  }\n\n\nexport {requestAccessToken, getSearchResults, getArtist};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}