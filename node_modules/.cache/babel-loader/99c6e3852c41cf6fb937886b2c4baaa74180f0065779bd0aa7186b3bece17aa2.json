{"ast":null,"code":"var _jsxFileName = \"/home/linkachu/jammming/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport './components/Track/Track';\nimport Track from './components/Track/Track';\nimport Tracklist from './components/Tracklist/Tracklist';\nimport Playlist from './components/Playlist/Playlist';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport SearchResults from './components/SearchResults/SearchResults';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchResults, setSearchResults] = useState([{\n    title: \"Test search result 5\",\n    artist: \"Test artist 5\",\n    album: \"Test album 5\",\n    id: \"5\"\n  }, {\n    title: \"Test search result 6\",\n    artist: \"Test artist 6\",\n    album: \"Test album 6\",\n    id: \"6\"\n  }, {\n    title: \"Test search result 7\",\n    artist: \"Test artist 7\",\n    album: \"Test album 7\",\n    id: \"7\"\n  }, {\n    title: \"Test search result 8\",\n    artist: \"Test artist 8\",\n    album: \"Test album 8\",\n    id: \"8\"\n  }]);\n  const [playlist, setPlaylist] = useState({\n    title: \"Sample playlist\",\n    tracks: [{\n      title: \"Test title 1\",\n      artist: \"Test artist 1\",\n      album: \"Test album 1\",\n      id: \"1\"\n    }, {\n      title: \"Test title 2\",\n      artist: \"Test artist 2\",\n      album: \"Test album 2\",\n      id: \"2\"\n    }, {\n      title: \"Test title 3\",\n      artist: \"Test artist 3\",\n      album: \"Test album 3\",\n      id: \"3\"\n    }, {\n      title: \"Test title 4\",\n      artist: \"Test artist 4\",\n      album: \"Test album 4\",\n      id: \"4\"\n    }, {\n      title: \"Test title 5\",\n      artist: \"Test artist 5\",\n      album: \"Test album 5\",\n      id: \"5\"\n    }]\n  });\n  function addToPlaylistHandler(track) {\n    if (!playlist.tracks.find(currTrack => currTrack.id === track.id)) {\n      setPlaylist(prev => {\n        return {\n          title: prev.title,\n          tracks: [...prev.tracks, track]\n        };\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Playlist, {\n      title: playlist.title,\n      tracks: playlist.tracks,\n      onAddTrack: addToPlaylistHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n      searchResults: searchResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OjQADPx9dqeTlmZySFWaDkdGGNE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Track","Tracklist","Playlist","SearchBar","SearchResults","useState","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","title","artist","album","id","playlist","setPlaylist","tracks","addToPlaylistHandler","track","find","currTrack","prev","className","children","onAddTrack","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/linkachu/jammming/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport './components/Track/Track'\nimport Track from './components/Track/Track';\nimport Tracklist from './components/Tracklist/Tracklist';\nimport Playlist from './components/Playlist/Playlist';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport SearchResults from './components/SearchResults/SearchResults';\nimport { useState } from 'react';\n\nfunction App() {\n  const [searchResults, setSearchResults] = useState([\n    {\n        title: \"Test search result 5\",\n        artist: \"Test artist 5\",\n        album: \"Test album 5\",\n        id: \"5\"\n    },\n    {\n        title: \"Test search result 6\",\n        artist: \"Test artist 6\",\n        album: \"Test album 6\",\n        id: \"6\"\n    },\n    {\n        title: \"Test search result 7\",\n        artist: \"Test artist 7\",\n        album: \"Test album 7\",\n        id: \"7\"\n    },\n    {\n        title: \"Test search result 8\",\n        artist: \"Test artist 8\",\n        album: \"Test album 8\",\n        id: \"8\"\n    }\n]);\n\n  const [playlist, setPlaylist] = useState({\n    title: \"Sample playlist\",\n    tracks: [\n      {\n          title: \"Test title 1\",\n          artist: \"Test artist 1\",\n          album: \"Test album 1\",\n          id: \"1\"\n      },\n      {\n          title: \"Test title 2\",\n          artist: \"Test artist 2\",\n          album: \"Test album 2\",\n          id: \"2\"\n      },\n      {\n          title: \"Test title 3\",\n          artist: \"Test artist 3\",\n          album: \"Test album 3\",\n          id: \"3\"\n      },\n      {\n          title: \"Test title 4\",\n          artist: \"Test artist 4\",\n          album: \"Test album 4\",\n          id: \"4\"\n      },\n      {\n          title: \"Test title 5\",\n          artist: \"Test artist 5\",\n          album: \"Test album 5\",\n          id: \"5\"\n      }\n    ]\n  });\n\n  function addToPlaylistHandler(track){\n    if(!playlist.tracks.find((currTrack) => currTrack.id === track.id)){\n      setPlaylist((prev) =>{\n        return {\n          title: prev.title,\n          tracks: [\n            ...prev.tracks,\n            track\n          ]\n        }\n      }\n    )}\n  }\n\n  return (\n    <div className=\"App\">\n      <Playlist title={playlist.title} tracks={playlist.tracks} onAddTrack={addToPlaylistHandler} />\n      <SearchResults searchResults={searchResults} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}