{"ast":null,"code":"var _jsxFileName = \"/home/linkachu/jammming/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport './components/Track/Track';\nimport Track from './components/Track/Track';\nimport Tracklist from './components/Tracklist/Tracklist';\nimport Playlist from './components/Playlist/Playlist';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport SearchResults from './components/SearchResults/SearchResults';\nimport Login from './components/Login/Login';\nimport { useEffect, useState } from 'react';\nimport { requestAccessToken, getSearchResults, authorize, setAuthCode } from './Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [playlist, setPlaylist] = useState({});\n  useEffect(() => {\n    setAuthCode();\n  }, []);\n  function addToPlaylistHandler(track) {\n    if (!playlist.tracks) {\n      setPlaylist(prev => {\n        return {\n          title: prev.title,\n          tracks: [track]\n        };\n      });\n    } else if (!playlist.tracks.find(currTrack => currTrack.id === track.id)) {\n      setPlaylist(prev => {\n        return {\n          title: prev.title,\n          tracks: [...prev.tracks, track]\n        };\n      });\n    }\n  }\n  function removeFromPlaylistHandler(track) {\n    if (playlist.tracks.find(currTrack => currTrack.id === track.id)) {\n      setPlaylist(prev => {\n        return {\n          title: prev.title,\n          tracks: prev.tracks.filter(currTrack => currTrack.id !== track.id)\n        };\n      });\n    }\n  }\n  function changePlaylistTitleNameHandler(newTitle) {\n    setPlaylist(prev => {\n      return {\n        title: newTitle,\n        tracks: prev.tracks\n      };\n    });\n  }\n  async function searchQueryHandler(query) {\n    if (!query) return;\n    let results = await getSearchResults(query);\n    let newResults = results.map(result => {\n      return {\n        title: result.name,\n        artist: result.artists[0].name,\n        album: result.album.name,\n        id: result.id,\n        uri: result.uri\n      };\n    });\n    setSearchResults(newResults);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Login, {\n      onClick: authorize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n      title: playlist.title,\n      tracks: playlist.tracks,\n      onRemoveTrack: removeFromPlaylistHandler,\n      onTitleChange: changePlaylistTitleNameHandler,\n      onCreate: createPlaylistHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearchQuery: searchQueryHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n      searchResults: searchResults,\n      onAddTrack: addToPlaylistHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"boRKAcPRIrG3J+qBN9NBJGE1Qno=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Track","Tracklist","Playlist","SearchBar","SearchResults","Login","useEffect","useState","requestAccessToken","getSearchResults","authorize","setAuthCode","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","playlist","setPlaylist","addToPlaylistHandler","track","tracks","prev","title","find","currTrack","id","removeFromPlaylistHandler","filter","changePlaylistTitleNameHandler","newTitle","searchQueryHandler","query","results","newResults","map","result","name","artist","artists","album","uri","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onRemoveTrack","onTitleChange","onCreate","createPlaylistHandler","onSearchQuery","onAddTrack","_c","$RefreshReg$"],"sources":["/home/linkachu/jammming/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport './components/Track/Track'\nimport Track from './components/Track/Track';\nimport Tracklist from './components/Tracklist/Tracklist';\nimport Playlist from './components/Playlist/Playlist';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport SearchResults from './components/SearchResults/SearchResults';\nimport Login from './components/Login/Login';\nimport { useEffect, useState } from 'react';\nimport { requestAccessToken, getSearchResults, authorize, setAuthCode } from './Spotify';\n\nfunction App() {\n  const [searchResults, setSearchResults] = useState([]);\n\n  const [playlist, setPlaylist] = useState({});\n\n  useEffect(() => { setAuthCode() }, []);\n\n  function addToPlaylistHandler(track){\n    if(!playlist.tracks){\n      setPlaylist((prev) => {\n        return {\n          title: prev.title,\n          tracks: [\n            track\n          ]\n        }\n      })\n    }\n    else if(!playlist.tracks.find((currTrack) => currTrack.id === track.id)){\n      setPlaylist((prev) =>{\n        return {\n          title: prev.title,\n          tracks: [\n            ...prev.tracks,\n            track\n          ]\n        }\n      }\n    )}\n  }\n\n  function removeFromPlaylistHandler(track){\n    if(playlist.tracks.find((currTrack) => currTrack.id === track.id)){\n      setPlaylist((prev) => {\n        return {\n          title: prev.title,\n          tracks: prev.tracks.filter((currTrack) => currTrack.id !== track.id)\n        }\n      })\n    }\n  }\n\n  function changePlaylistTitleNameHandler(newTitle){\n    setPlaylist((prev) => {\n      return {\n        title: newTitle,\n        tracks: prev.tracks\n      }\n    })\n  }\n\n  async function searchQueryHandler(query){\n    if(!query)\n      return;\n\n    let results = await getSearchResults(query);\n    \n    let newResults = results.map(result => {\n      return {\n        title: result.name,\n        artist: result.artists[0].name,\n        album: result.album.name,\n        id: result.id,\n        uri: result.uri\n      }\n    });\n    \n    setSearchResults(newResults);\n  }\n\n  return (\n    <div className=\"App\">\n      <Login onClick={authorize} />\n      <Playlist title={playlist.title} tracks={playlist.tracks} onRemoveTrack={removeFromPlaylistHandler} onTitleChange={changePlaylistTitleNameHandler} onCreate={createPlaylistHandler} />\n      <SearchBar onSearchQuery={searchQueryHandler} />\n      <SearchResults searchResults={searchResults} onAddTrack={addToPlaylistHandler} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}